✅ How to Create a Calculation Group for Custom Periods

Method 1: Using Tabular Editor (Recommended for Flexibility)
1. Open your Power BI file (.pbix) and ensure the data model contains a proper Date table.
2. From the External Tools ribbon, open Tabular Editor. Note: If Tabular Editor is not installed, you can download it separately.
3. In Tabular Editor, locate your model in the left panel.
4. Right-click on Tables → select Create New → Calculation Group.
5. Rename the Calculation Group, for example, to Custom Periods.
6. Inside the Calculation Group, right-click and select New Calculation Item.
7. For each custom period (e.g., Current Week, Last 10 Days, Current Month, etc.):
8. Give an appropriate name to the Calculation Item.
9. Copy the respective DAX code for that period into the expression window.
10. Repeat step 7 for all the required custom period Calculation Items.
11. Save your changes in Tabular Editor.
122. Return to Power BI and refresh the model to apply the changes.


// Custom Periods Calculation Group - DAX Expressions
// These expressions are intended to be used inside a Calculation Group to dynamically switch between custom time periods


//======================================================================================================================================================================
// Current Week - Filters data for the current week (Monday to Sunday)
VAR _Today = TODAY()
VAR _StartOfWeek = _Today - WEEKDAY(_Today, 2) + 1  // Monday as start of the week
VAR _EndOfWeek = _StartOfWeek + 6
RETURN 
CALCULATE(SELECTEDMEASURE(), DATESBETWEEN('Date'[Date], _StartOfWeek, _EndOfWeek))


//======================================================================================================================================================================
// Last Week - Filters data for the previous week (Monday to Sunday)
VAR _Today = TODAY()
VAR _StartOfThisWeek = _Today - WEEKDAY(_Today, 2) + 1
VAR _StartOfLastWeek = _StartOfThisWeek - 7
VAR _EndOfLastWeek = _StartOfThisWeek - 1
RETURN 
CALCULATE(SELECTEDMEASURE(), DATESBETWEEN('Date'[Date], _StartOfLastWeek, _EndOfLastWeek))


//======================================================================================================================================================================
// Last 10 Days - Shows data for the last 10 days unless a filter is already applied
VAR _IsDateFiltered = CALCULATE(ISFILTERED('Date'[Date]), ALLSELECTED())
RETURN 
IF(_IsDateFiltered, SELECTEDMEASURE(), CALCULATE(SELECTEDMEASURE(), KEEPFILTERS(DATESINPERIOD('Date'[Date], TODAY(), -10, DAY))))


//======================================================================================================================================================================
// Last 20 Days - Shows data for the last 20 days unless a filter is already applied
VAR _IsDateFiltered = CALCULATE(ISFILTERED('Date'[Date]), ALLSELECTED())
RETURN 
IF(_IsDateFiltered, SELECTEDMEASURE(), CALCULATE(SELECTEDMEASURE(), KEEPFILTERS(DATESINPERIOD('Date'[Date], TODAY(), -20, DAY))))


//======================================================================================================================================================================
// Last 30 Days - Shows data for the last 30 days unless a filter is already applied
VAR __Isdatesfiltered = CALCULATE(ISFILTERED('Date'[Date]), ALLSELECTED())
VAR _Day = 30
RETURN 
IF(__Isdatesfiltered, SELECTEDMEASURE(), CALCULATE(SELECTEDMEASURE(), KEEPFILTERS(DATESINPERIOD('Date'[Date], TODAY(), -_Day, DAY))))


//======================================================================================================================================================================
// Current Month - Filters data for the current month up to today
RETURN 
CALCULATE(SELECTEDMEASURE(), DATESBETWEEN('Date'[Date], DATE(YEAR(TODAY()), MONTH(TODAY()), 1), TODAY()))


//======================================================================================================================================================================
// Last Month - Filters data for the full previous calendar month
RETURN 
CALCULATE(SELECTEDMEASURE(), DATESBETWEEN('Date'[Date], DATE(YEAR(EOMONTH(TODAY(), -1)), MONTH(EOMONTH(TODAY(), -1)), 1), EOMONTH(TODAY(), -1)))


//======================================================================================================================================================================
// Last to Last Month - Filters data for the month before last
VAR _EndOfLastToLastMonth = EOMONTH(TODAY(), -2)
VAR _StartDate = DATE(YEAR(_EndOfLastToLastMonth), MONTH(_EndOfLastToLastMonth), 1)
RETURN 
CALCULATE(SELECTEDMEASURE(), DATESBETWEEN('Date'[Date], _StartDate, _EndOfLastToLastMonth))


//======================================================================================================================================================================
// Last 2 Months - Combines data for the last 2 completed months
VAR _EndOfLastMonth = EOMONTH(TODAY(), -1)
VAR _StartOf2MonthsAgo = DATE(YEAR(EOMONTH(TODAY(), -2)), MONTH(EOMONTH(TODAY(), -2)), 1)
RETURN 
CALCULATE(SELECTEDMEASURE(), DATESBETWEEN('Date'[Date], _StartOf2MonthsAgo, _EndOfLastMonth))


//======================================================================================================================================================================
// Last 3 Months - Shows last 90 days of data unless a filter is already applied
VAR __Isdatesfiltered = CALCULATE(ISFILTERED('Date'[Date]), ALLSELECTED())
VAR _Day = 90
RETURN 
IF(__Isdatesfiltered, SELECTEDMEASURE(), CALCULATE(SELECTEDMEASURE(), KEEPFILTERS(DATESINPERIOD('Date'[Date], TODAY(), -_Day, DAY))))


//======================================================================================================================================================================
// Last 6 Months - Shows last 180 days of data unless a filter is already applied
VAR __Isdatesfiltered = CALCULATE(ISFILTERED('Date'[Date]), ALLSELECTED())
VAR __Day = 180
RETURN 
IF(__Isdatesfiltered, SELECTEDMEASURE(), CALCULATE(SELECTEDMEASURE(), KEEPFILTERS(DATESINPERIOD('Date'[Date], TODAY(), -__Day, DAY))))


//======================================================================================================================================================================
// Last 12 Months - Shows data for the last 12 completed months
VAR _EndOfLastMonth = EOMONTH(TODAY(), -1)
VAR _StartOf12MonthsAgo = DATE(YEAR(EOMONTH(TODAY(), -12)), MONTH(EOMONTH(TODAY(), -12)), 1)
RETURN 
CALCULATE(SELECTEDMEASURE(), DATESBETWEEN('Date'[Date], _StartOf12MonthsAgo, _EndOfLastMonth))


//======================================================================================================================================================================
// Last 13 Months - Shows data for the last 13 completed months
VAR _EndOfLastMonth = EOMONTH(TODAY(), -1)
VAR _StartOf12MonthsAgo = DATE(YEAR(EOMONTH(TODAY(), -13)), MONTH(EOMONTH(TODAY(), -13)), 1)
RETURN 
CALCULATE(SELECTEDMEASURE(), DATESBETWEEN('Date'[Date], _StartOf12MonthsAgo, _EndOfLastMonth))


//======================================================================================================================================================================
// Current Year (YTD) - Year-to-date data unless a filter is already applied
VAR __Isdatesfiltered = CALCULATE(ISFILTERED('Date'[Date]), ALLSELECTED())
RETURN 
IF(__Isdatesfiltered, SELECTEDMEASURE(), CALCULATE(SELECTEDMEASURE(), KEEPFILTERS(DATESYTD('Date'[Date]))))


//======================================================================================================================================================================
// Last Year - Year-to-date data for last year unless a filter is already applied
VAR __Isdatesfiltered = CALCULATE(ISFILTERED('Date'[Date]), ALLSELECTED())
RETURN 
IF(__Isdatesfiltered, SELECTEDMEASURE(), CALCULATE(SELECTEDMEASURE(), KEEPFILTERS(SAMEPERIODLASTYEAR(DATESYTD('Date'[Date])))))


//======================================================================================================================================================================
// YTD excluding Current Month - Year-to-date excluding the current month
RETURN 
CALCULATE(SELECTEDMEASURE(), DATESBETWEEN('Date'[Date], DATE(YEAR(EOMONTH(TODAY(), -1)), 1, 1), EOMONTH(TODAY(), -1)))


//======================================================================================================================================================================
// YTD including Current Month - Full year-to-date up to today
RETURN 
CALCULATE(SELECTEDMEASURE(), DATESBETWEEN('Date'[Date], DATE(YEAR(TODAY()), 1, 1), TODAY()))


//======================================================================================================================================================================
// Current Quarter - Filters for current calendar quarter
VAR _CurrentQuarter = QUARTER(TODAY())
VAR _CurrentYear = YEAR(TODAY())
VAR _StartDate = DATE(_CurrentYear, (_CurrentQuarter - 1) * 3 + 1, 1)
VAR _EndDate = EOMONTH(_StartDate, 2)
RETURN 
CALCULATE(SELECTEDMEASURE(), DATESBETWEEN('Date'[Date], _StartDate, _EndDate))


//======================================================================================================================================================================
// Last Quarter - Filters for the previous calendar quarter
VAR _CurrentQuarter = QUARTER(TODAY())
VAR _CurrentYear = YEAR(TODAY())
VAR _LastQuarter = SWITCH(TRUE(), _CurrentQuarter = 1, 4, _CurrentQuarter - 1)
VAR _YearOfLastQuarter = IF(_CurrentQuarter = 1, _CurrentYear - 1, _CurrentYear)
VAR _StartDate = DATE(_YearOfLastQuarter, (_LastQuarter - 1) * 3 + 1, 1)
VAR _EndDate = EOMONTH(_StartDate, 2)
RETURN 
CALCULATE(SELECTEDMEASURE(), DATESBETWEEN('Date'[Date], _StartDate, _EndDate))


//======================================================================================================================================================================
// All - Removes date filters unless a filter already exists
VAR __Isdatesfiltered = CALCULATE(ISFILTERED('Date'[Date]), ALLSELECTED())
RETURN 
IF(__Isdatesfiltered, SELECTEDMEASURE(), CALCULATE(SELECTEDMEASURE(), REMOVEFILTERS('Date'[Date])))


//======================================================================================================================================================================
// Custom - Same as "All", placeholder for future custom logic
VAR __Isdatesfiltered = CALCULATE(ISFILTERED('Date'[Date]), ALLSELECTED())
RETURN 
IF(__Isdatesfiltered, SELECTEDMEASURE(), CALCULATE(SELECTEDMEASURE(), REMOVEFILTERS('Date'[Date])))
